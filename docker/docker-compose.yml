version: '2'

services:

  postgresql:
    container_name: srs-postgresql
    hostname: ${POSTGRES_HOST}
    build: srs-postgresql
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgresql:/var/lib/postgresql/data/
    networks:
      - srs-platform
    command: postgres -c 'shared_preload_libraries='pg_stat_statements'' -c 'pg_stat_statements.max=10000' -c 'pg_stat_statements.track=all'

  rabbitmq:
    container_name: srs-rabbitmq
    hostname: ${RABBITMQ_HOST}
    image: rabbitmq:${RABBITMQ_VERSION}
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
#      - 25672:25672
      - ${RABBITMQ_MNG_PORT}:15672
#      - 4369:4369
#      - 5671:5671
      - ${RABBITMQ_PORT}:5672
    networks:
      - srs-platform

  vault:
    container_name: srs-vault
    hostname: ${VAULT_HOST}
    image: vault:${VAULT_VERSION}
    restart: on-failure
    volumes:
      - ./srs-vault/config:/vault/config
#      - ./vault/policies:/vault/policies
      - ./srs-vault/data:/vault/file
    ports:
      - ${VAULT_PORT}:8200
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json
    networks:
      - srs-platform

volumes:
  postgresql:
    driver: local

networks:
  srs-platform:
    driver: bridge