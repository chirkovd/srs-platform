subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('jooqProps')) {
            jooqProps = project.findProperty('jooqProps')

            jooq {
                version = '3.16.4'  // default (can be omitted)
                edition = nu.studer.gradle.jooq.JooqEdition.OSS  // default (can be omitted)

                configurations {
                    main {  // name of the jOOQ configuration
                        generateSchemaSourceOnCompilation = false

                        generationTool {
                            logging = Logging.WARN
                            jdbc {
                                driver = 'org.postgresql.Driver'
                                url = jooqProps.db
                                user = 'master'
                                password = 'secret'
                            }
                            generator {
                                name = 'org.jooq.codegen.JavaGenerator'
                                strategy {
                                    name = 'org.jooq.codegen.example.JPrefixGeneratorStrategy'
                                }
                                database {
                                    name = 'org.jooq.meta.postgres.PostgresDatabase'
                                    inputSchema = jooqProps.inputSchema
                                    if (jooqProps.includes) {
                                        includes = jooqProps.includes
                                    }
                                    excludes = 'flyway_schema_history'
                                    forcedTypes {
                                        forcedType {
                                            name = 'varchar'
                                            includeExpression = '.*'
                                            includeTypes = 'JSONB?'
                                        }
                                        forcedType {
                                            name = 'varchar'
                                            includeExpression = '.*'
                                            includeTypes = 'INET'
                                        }
                                    }
                                }
                                generate {
                                    deprecated = false
                                    records = true
                                    immutablePojos = true
                                    fluentSetters = true
                                }
                                target {
                                    packageName = jooqProps.packageName
                                    directory = 'build/generated-src/jooq/main'  // default (can be omitted)
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
