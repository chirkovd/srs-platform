/*
 * This file is generated by jOOQ.
 */
package org.systems.dipe.srs.search.jooq.tables;


import org.jooq.Record;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.systems.dipe.srs.search.jooq.Indexes;
import org.systems.dipe.srs.search.jooq.JSearches;
import org.systems.dipe.srs.search.jooq.Keys;
import org.systems.dipe.srs.search.jooq.tables.records.JSearchSquadRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JSearchSquad extends TableImpl<JSearchSquadRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>searches.search_squad</code>
     */
    public static final JSearchSquad SEARCH_SQUAD = new JSearchSquad();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JSearchSquadRecord> getRecordType() {
        return JSearchSquadRecord.class;
    }

    /**
     * The column <code>searches.search_squad.squad_id</code>.
     */
    public final TableField<JSearchSquadRecord, UUID> SQUAD_ID = createField(DSL.name("squad_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>searches.search_squad.process_id</code>.
     */
    public final TableField<JSearchSquadRecord, UUID> PROCESS_ID = createField(DSL.name("process_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>searches.search_squad.created</code>.
     */
    public final TableField<JSearchSquadRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    private JSearchSquad(Name alias, Table<JSearchSquadRecord> aliased) {
        this(alias, aliased, null);
    }

    private JSearchSquad(Name alias, Table<JSearchSquadRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>searches.search_squad</code> table reference
     */
    public JSearchSquad(String alias) {
        this(DSL.name(alias), SEARCH_SQUAD);
    }

    /**
     * Create an aliased <code>searches.search_squad</code> table reference
     */
    public JSearchSquad(Name alias) {
        this(alias, SEARCH_SQUAD);
    }

    /**
     * Create a <code>searches.search_squad</code> table reference
     */
    public JSearchSquad() {
        this(DSL.name("search_squad"), null);
    }

    public <O extends Record> JSearchSquad(Table<O> child, ForeignKey<O, JSearchSquadRecord> key) {
        super(child, key, SEARCH_SQUAD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JSearches.SEARCHES;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IX_SEARCHES_SEARCH_SQUAD_SQUAD_PROCESS);
    }

    @Override
    public UniqueKey<JSearchSquadRecord> getPrimaryKey() {
        return Keys.PK_SEARCHES_SEARCH_SQUAD;
    }

    @Override
    public List<ForeignKey<JSearchSquadRecord, ?>> getReferences() {
        return Arrays.asList(Keys.SEARCH_SQUAD__FK_SEARCHES_SEARCH_SQUAD_PROCESS);
    }

    private transient JSearchProcess _searchProcess;

    /**
     * Get the implicit join path to the <code>searches.search_process</code>
     * table.
     */
    public JSearchProcess searchProcess() {
        if (_searchProcess == null)
            _searchProcess = new JSearchProcess(this, Keys.SEARCH_SQUAD__FK_SEARCHES_SEARCH_SQUAD_PROCESS);

        return _searchProcess;
    }

    @Override
    public JSearchSquad as(String alias) {
        return new JSearchSquad(DSL.name(alias), this);
    }

    @Override
    public JSearchSquad as(Name alias) {
        return new JSearchSquad(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JSearchSquad rename(String name) {
        return new JSearchSquad(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JSearchSquad rename(Name name) {
        return new JSearchSquad(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
