/*
 * This file is generated by jOOQ.
 */
package org.systems.dipe.srs.person.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.systems.dipe.srs.person.jooq.tables.JSquad;

import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JSquadRecord extends UpdatableRecordImpl<JSquadRecord> implements Record2<UUID, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>squads.squad.squad_id</code>.
     */
    public JSquadRecord setSquadId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>squads.squad.squad_id</code>.
     */
    public UUID getSquadId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>squads.squad.created</code>.
     */
    public JSquadRecord setCreated(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>squads.squad.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, LocalDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, LocalDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return JSquad.SQUAD.SQUAD_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return JSquad.SQUAD.CREATED;
    }

    @Override
    public UUID component1() {
        return getSquadId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreated();
    }

    @Override
    public UUID value1() {
        return getSquadId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreated();
    }

    @Override
    public JSquadRecord value1(UUID value) {
        setSquadId(value);
        return this;
    }

    @Override
    public JSquadRecord value2(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public JSquadRecord values(UUID value1, LocalDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JSquadRecord
     */
    public JSquadRecord() {
        super(JSquad.SQUAD);
    }

    /**
     * Create a detached, initialised JSquadRecord
     */
    public JSquadRecord(UUID squadId, LocalDateTime created) {
        super(JSquad.SQUAD);

        setSquadId(squadId);
        setCreated(created);
    }
}
