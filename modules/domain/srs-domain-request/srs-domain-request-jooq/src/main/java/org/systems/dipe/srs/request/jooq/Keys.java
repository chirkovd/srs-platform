/*
 * This file is generated by jOOQ.
 */
package org.systems.dipe.srs.request.jooq;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.systems.dipe.srs.request.jooq.tables.JRequest;
import org.systems.dipe.srs.request.jooq.tables.JRequestItem;
import org.systems.dipe.srs.request.jooq.tables.JRequestLocation;
import org.systems.dipe.srs.request.jooq.tables.records.JRequestItemRecord;
import org.systems.dipe.srs.request.jooq.tables.records.JRequestLocationRecord;
import org.systems.dipe.srs.request.jooq.tables.records.JRequestRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * requests.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JRequestRecord> PK_REQUESTS_REQUEST = Internal.createUniqueKey(JRequest.REQUEST, DSL.name("PK.requests.request"), new TableField[] { JRequest.REQUEST.REQUEST_ID }, true);
    public static final UniqueKey<JRequestItemRecord> PK_REQUESTS_REQUEST_ITEM = Internal.createUniqueKey(JRequestItem.REQUEST_ITEM, DSL.name("PK.requests.request_item"), new TableField[] { JRequestItem.REQUEST_ITEM.ITEM_ID }, true);
    public static final UniqueKey<JRequestLocationRecord> PK_REQUESTS_REQUEST_LOCATION = Internal.createUniqueKey(JRequestLocation.REQUEST_LOCATION, DSL.name("PK.requests.request_location"), new TableField[] { JRequestLocation.REQUEST_LOCATION.LOCATION_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<JRequestItemRecord, JRequestRecord> REQUEST_ITEM__FK_REQUESTS_REQUEST_ITEM_REQUEST_ID = Internal.createForeignKey(JRequestItem.REQUEST_ITEM, DSL.name("FK.requests.request_item.request_id"), new TableField[] { JRequestItem.REQUEST_ITEM.REQUEST_ID }, Keys.PK_REQUESTS_REQUEST, new TableField[] { JRequest.REQUEST.REQUEST_ID }, true);
    public static final ForeignKey<JRequestLocationRecord, JRequestRecord> REQUEST_LOCATION__FK_REQUESTS_REQUEST_LOCATION_REQUEST_ID = Internal.createForeignKey(JRequestLocation.REQUEST_LOCATION, DSL.name("FK.requests.request_location.request_id"), new TableField[] { JRequestLocation.REQUEST_LOCATION.REQUEST_ID }, Keys.PK_REQUESTS_REQUEST, new TableField[] { JRequest.REQUEST.REQUEST_ID }, true);
}
